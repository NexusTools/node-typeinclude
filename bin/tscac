#!/usr/bin/env node
var startNow = Date.now();
var path = require("path");
var cli = require("cli-color");
var fs = require("fs");

var typeinclude;
if(!process.env.TYPEINCLUDE_DEVMODE)
	typeinclude = require("../")(process.cwd());
else
	typeinclude = require("typeinclude")(process.cwd());

var logger;
try {
    logger = require("nulllogger");
    logger = new logger("typeinclude");
    
    if(!logger.info)
        throw "Bad implementation";
} catch(e) {
    // Logging typeinclude isn't super important
    logger = {
        info: console.log
    };
}

var states = [];
var entries = [];
var colors = [cli.whiteBright, cli.yellow, cli.yellowBright, cli.green, cli.greenBright, cli.redBright];

function writeState() {
    process.stdout.write("\t\t");
    states.forEach(function(state) {
        process.stdout.write(colors[state]("â€¢"));
    });
    process.stdout.write("\n\n");
    process.stdout.write(cli.move.up(2));
}
function updateState(file, state) {
    var pos = entries.indexOf(file);
    if(pos == -1) {
        pos = entries.length;
        entries.push(file);
        stats[0]++;
    }
    if(states[pos] >= state)
        return;
    
    states[pos] = state;
    writeState();
    return true;
}

var start = Date.now();
var stats = [0, 0, 0, 0];
var where = path.resolve(process.cwd(), process.argv[2] || (require(path.resolve(process.cwd(), "package.json")).typesource || "."));
logger.info("Compiling typescript files in", cli.white("`" + where + "`"));
typeinclude.registerverbose({
    discovered: function(script) {
        updateState(script, 0);
    },
    preprocessing: function(script) {
        updateState(script, 1);
    },
    preprocessed: function(script) {
        if(updateState(script, 2))
            stats[1]++;
    },
    compiling: function(script) {
        updateState(script, 3);
    },
    compiled: function(script) {
        if(updateState(script, 4))
            stats[2]++;
    },
    error: function(script) {
        if(updateState(script, 5))
            stats[3]++;
    }
});
console.log();
console.log();

typeinclude.autocompile(where);

console.log();
console.log();
console.log();
logger.info("Took " + (Date.now() - start)/1000 + " seconds.");
logger.info(colors[0](stats[0]), "files discovered");
logger.info(colors[2](stats[1]), "files processed");
logger.info(colors[4](stats[2]), "files compiled");
logger.info(colors[5](stats[3]), "errors");
